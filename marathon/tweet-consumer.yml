id:  /demo/tweet-consumer
cmd: !cfg_str export TWEET_CONSUMER_KAFKA_BROKERS=`curl -s master.mesos:8123/v1/services/_broker-0._tcp.kafka.mesos | python -c 'import sys, json; j = json.load(sys.stdin); print(j[0]["ip"] + ":" + j[0]["port"])'`
  && /opt/spark/dist/bin/spark-submit
  --master mesos://leader.mesos:5050
  --executor-memory 4g
  --conf spark.mesos.coarse=true
  --conf spark.cores.max=4
  --conf spark.ui.port=$PORT0
  --conf spark.mesos.executor.docker.image=mesosphere/iot-demo:{{tweet_consumer_version}}
  --packages org.apache.spark:spark-streaming-kafka-assembly_2.10:1.6.0
  --class com.bythebay.pipeline.spark.streaming.StreamingRatings /streaming-assembly-1.0.jar
env:
  TWEET_CONSUMER_KAFKA_TOPIC: dem-tweets
  TWEET_CONSUMER_CASSANDRA_SEEDS: node-0.cassandra.mesos
  TWEET_CONSUMER_CASSANDRA_KEYSPACE: twitter
container:
  type: DOCKER
  docker:
    image: !cfg_str mesosphere/iot-demo:{{tweet_consumer_version}}
    forcePullImage: true
cpus: 0.5
mem: 2048
instances: 1
ports: [0]
healthChecks:
  -
    "portIndex": 0
    "protocol": "HTTP"
    "path": "/"
    "gracePeriodSeconds": 15
    "intervalSeconds": 60
    "timeoutSeconds": 10
    "maxConsecutiveFailures": 3
